What happens when you initialize a repository? Why do you need to do it?
- It creates the .git directory inside the current directory. To start tracking changes?

How is the staging area different from the working directory and the repository?
What value do you think it offers?
- The staging area is a place where the coder can select which files to commit.
- It offers greater granularity in terms of logical changes.

How can you use the staging area to make sure you have one commit per logical
change?
- By only adding files that are relevant to that particular logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
- When you want to add a new experimental functionality into your code.
- It will help by logically organising the history of the code.

How do the diagrams help you visualize the branch structure?
- By locating the point of divergence (where the branch splits).

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
- The result will be a new commit with all the changes made from the tip of each branches.
- To prevent confusion.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
- Auto Merging are good for simple and separate modifications. It reduces redundant things that we have to do.
- Manual merges are good for complex modification since it doesn't temper with your code.